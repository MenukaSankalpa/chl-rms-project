<?php

namespace App\Http\Controllers;

use App\BoxOwner;
use App\Rate;
use Illuminate\Http\Request;
use Yajra\DataTables\DataTables;

class RateController extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        $this->middleware('auth:admin');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function index()
    {
        $this->authorize('view',Rate::class);
        $rates = Rate::all();
        return view('rate.index',compact('rates'));

    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function create()
    {
        $this->authorize('create',Rate::class);
        $box_owners = BoxOwner::all();

        return view('rate.create',compact('box_owners'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request $request
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function store(Request $request)
    {
        $this->authorize('create',Rate::class);
        $rate = new Rate();

        $request->validate([
            'rate'=>'required',
            'date'=>'required|unique_with:rates,rate,box_owner_id,currency,date',
        ]);

        $rate->rate = $request->rate;
        $rate->date = $request->date;
        $rate->currency = $request->currency;
        $rate->box_owner_id = $request->box_owner_id;
        $rate->save();

        return redirect('/rate')->with('success','Created Successfully');

    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Rate $rate
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function show(Rate $rate)
    {
        $this->authorize('view',Rate::class);
        $box_owners = BoxOwner::all();

        return view('rate.show', compact('rate'.'box_owners'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Rate $rate
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function edit(Rate $rate)
    {

        $this->authorize('update',Rate::class);
        $box_owners = BoxOwner::all();


        return view('rate.edit',compact('rate','box_owners'));

    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request $request
     * @param  \App\Rate $rate
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function update(Request $request, Rate $rate)
    {
        $this->authorize('update',Rate::class);

        $request->validate([
            'rate'=>'required',
            'date'=>'required|unique_with:rates,rate,box_owner_id,currency,date,'.$rate->id,
        ]);

        $rate->rate = $request->rate;
        $rate->date = $request->date;
        $rate->currency = $request->currency;
        $rate->box_owner_id = $request->box_owner_id;
        $rate->update();

        return redirect('/rate')->with('success','Updated Successfully');

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Rate $rate
     * @return \Illuminate\Http\Response
     * @throws \Exception
     */
    public function destroy(Rate $rate)
    {
        $this->authorize('delete',Rate::class);

        $rate->delete();

        return redirect('/rate')->with('success','deleted Successfully');
    }

    /**
     * @param DataTables $datatables
     * @return mixed
     */
    public function data(DataTables $datatables)
    {
        return $datatables->eloquent(Rate::query()->with('box_owner'))
            ->editColumn('currency', function ($rate) {
                return $rate->currency==1?'LKR':"USD";
            })
            ->addColumn('action',function ($rate){
                return view('rate.actions',compact('rate'));
            })
            ->rawColumns([ 'action'])
            ->make(true);
    }

}

