<?php

namespace App\Http\Controllers;

use App\Port;
use Illuminate\Foundation\Auth\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Yajra\DataTables\DataTables;

class PortController extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        $this->middleware('auth:admin');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function index()
    {
        $this->authorize('view',Port::class);
        $ports = Port::all();
        return view('port.index',compact('ports'));

    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function create()
    {
        $this->authorize('create',Port::class);
        return view('port.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request $request
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function store(Request $request)
    {
        $this->authorize('create',Port::class);
        $port = new Port();

        $request->validate([
            'code'=>'required|unique:ports,code',
            'name'=>'required',
        ]);

        $port->code = $request->code;
        $port->name = $request->name;
        $port->save();

        return redirect('/port')->with('success','Created Successfully');

    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Port $port
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function show(Port $port)
    {
        $this->authorize('view',Port::class);

        return view('port.show', compact('port'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Port $port
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function edit(Port $port)
    {

        $this->authorize('update',Port::class);

        return view('port.edit',compact('port'));

    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request $request
     * @param  \App\Port $port
     * @return \Illuminate\Http\Response
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function update(Request $request, Port $port)
    {
        $this->authorize('update',Port::class);

        $request->validate([
            'code'=>'required|unique:ports,code,'.$port->id,
            'name'=>'required',
        ]);

        $port->code = $request->code;
        $port->name = $request->name;
        $port->update();

        return redirect('/port')->with('success','Updated Successfully');

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Port $port
     * @return \Illuminate\Http\Response
     * @throws \Exception
     */
    public function destroy(Port $port)
    {
        $this->authorize('delete',Port::class);

        $port->delete();

        return redirect('/port')->with('success','deleted Successfully');
    }

    /**
     * @param DataTables $datatables
     * @return mixed
     */
    public function data(DataTables $datatables)
    {
        return $datatables->eloquent(Port::query())
            ->editColumn('code', function ($port) {
                return '<a href="'.url('/port/'.$port->id).'">' . $port->code . '</a>';
            })
            ->addColumn('action',function ($port){
                return view('port.actions',compact('port'));
            })
            ->rawColumns(['code', 'action'])
            ->make(true);
    }

}

