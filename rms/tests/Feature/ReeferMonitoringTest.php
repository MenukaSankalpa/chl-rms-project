<?php

namespace Tests\Feature;

use App\Admin;
use App\Container;
use App\ReeferMonitoring;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class ReeferMonitoringTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->actingAs(factory(Admin::class)->create());
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_no_monitoring_plug_off_on_plug_on_slot()
    {
        $this->container = new Container();
        $this->container->container_number = 'YMLU5391200'	;
        $this->container->vessel_id = '44';
        $this->container->voyage_id = '46';
        $this->container->loading_discharging = 'D';
        $this->container->yard_location = 'K58';
        $this->container->ts_local = 'IMP';
        $this->container->temperature_unit = 'C';
        $this->container->set_temp = '18';
        $this->container->plug_on_date = '2019-09-08';
        $this->container->plug_on_time = '01:00:00';
        $this->container->plug_on_temp = '-6';
        $this->container->rdt_temp = '12';
        $this->container->plugging_category = 	'monitoring';
        $this->container->save();

        $response = $this->put('/monitoring_row_create/'.$this->container->id, [
            'schedule_4' => '',
            'schedule_8' => '',
            'schedule_12' => '',
            'schedule_16' => '',
            'schedule_20' => '',
            'schedule_24' => '',
            'plug_off_date' => '2019-09-08',
            'plug_off_time' => '01:30:00',
            'plug_off_temp' => '12',
            '_method' => 'PUT',
            'row_monitoring_date' => '2019-09-08',
            'date' => '2019-09-08',
            'loading_discharging' => 'B',
            'vessel_id' => '',
            'yard_location' => '',
            'voyage_id' => '',
            'container_number' => '',
            'redirect_target' => '/read/reefer_monitoring_excel/',
            'plug_cat' => 'monitoring',
            'toggle_container_number' => 'on',
            'toggle_yard_location' => 'on',
            'toggle_set_temp' => 'on',
            'toggle_plug_on_date' => 'on',
            'toggle_plug_on_time' => 'on',
            'toggle_temperature_unit' => 'on',
            'toggl_plug_off' => 'on',
            'status' => '11'
        ]);

        //$response->assertStatus(200);
        $this->expectOutputString('');
        $message = json_decode($response->content())->message;
        $this->assertStringContainsString('No Monitoring changes were found',$message->success[0]);
        $this->assertStringContainsString('Plug off Successful',$message->success[1]);
    }

    public function test_has_monitoring_plug_off_same_day_as_plug_on(){

        $container = new Container();
        $container->container_number = 'SZLU9553015';
        $container->loading_discharging = 'L';
        $container->yard_location = 'K30';
        $container->ts_local = 'EXP';
        $container->temperature_unit = 'C';
        $container->set_temp = '20';
        $container->plug_on_date = '2019-09-01';
        $container->plug_on_time = '02:26:00';
        $container->plug_on_temp = '22';
        $container->ex_on_career_vessel = '54';
        $container->ex_on_career_voyage = '61';
        $container->plugging_category = 	'monitoring';
        $container->save();

        $monitoring = new ReeferMonitoring();
        $monitoring->container_id = $container->id;
        $monitoring->date = $container->plug_on_date;
        $monitoring->schedule_4 = '22.00';
        $monitoring->save();

        $response = $this->put('/monitoring_row_update/'.$container->id.'/poff',[
            'schedule_4'=>'22.00',
            'schedule_8'=>'',
            'schedule_12'=>'',
            'schedule_16'=>'',
            'schedule_20'=>'',
            'schedule_24'=>'',
            'plug_off_date'=>'2019-09-01',
            'plug_off_time'=>'04:30:00',
            'plug_off_temp'=>'12',
            '_method'=>'PUT',
            'row_monitoring_date'=>'2019-09-01',
            'date'=>'2019-09-01',
            'loading_discharging'=>'B',
            'vessel_id'=>'',
            'yard_location'=>'',
            'voyage_id'=>'',
            'container_number'=>'',
            'redirect_target'=>'/read/reefer_monitoring_excel/',
            'plug_cat'=>'monitoring',
            'toggle_container_number'=>'on',
            'toggle_yard_location'=>'on',
            'toggle_set_temp'=>'on',
            'toggle_plug_on_date'=>'on',
            'toggle_plug_on_time'=>'on',
            'toggle_temperature_unit'=>'on',
            'toggl_plug_off'=>'on',
            'status'=>'13']);
        $response->assertOk();
        $this->expectOutputString('');
        $message = json_decode($response->content())->message;
        //var_dump($message);
        $this->assertStringContainsString('Monitoring Successfully Created',$message->success[0]);
        $this->assertStringContainsString('Successfully saved',$message->success[1]);
        $this->assertStringContainsString('Plug off Successful',$message->success[2]);
    }

    public function test_plug_off_same_day_as_plug_on_save_monitoring_and_reading_same_time(){

        $container = new Container();
        $container->container_number = 'SZLU9553015';
        $container->loading_discharging = 'L';
        $container->yard_location = 'K30';
        $container->ts_local = 'EXP';
        $container->temperature_unit = 'C';
        $container->set_temp = '20';
        $container->plug_on_date = '2019-09-01';
        $container->plug_on_time = '02:26:00';
        $container->plug_on_temp = '22';
        $container->ex_on_career_vessel = '54';
        $container->ex_on_career_voyage = '61';
        $container->plugging_category = 	'monitoring';
        $container->save();

        $query_string = 'schedule_4=22.00&schedule_8=&schedule_12=&schedule_16=&schedule_20=&schedule_24=&plug_off_date=2019-09-01&plug_off_time=04%3A30%3A00&plug_off_temp=12&_method=PUT&row_monitoring_date=2019-09-01&date=2019-09-01&loading_discharging=B&vessel_id=&yard_location=&voyage_id=&container_number=&redirect_target=%2Fread%2Freefer_monitoring_excel%2F&plug_cat=monitoring&toggle_container_number=on&toggle_plug_on_date=on&toggle_plug_on_time=on&toggle_temperature_unit=on&toggl_plug_off=on&toggle_delete=on&status=11';
        parse_str($query_string, $query_array);
        $response = $this->put('/monitoring_row_create/'.$container->id,$query_array);
        $response->assertOk();
        $this->expectOutputString('');
        $message = json_decode($response->content())->message;
        //var_dump($message,$query_array);
        $this->assertStringContainsString('Monitoring Successfully Created',$message->success[0]);
        $this->assertStringContainsString('Plug off Successful',$message->success[1]);
    }

    public function test_plug_on_time_slot_at_16_pm_add_new_monitoring_at_16(){

        $container = new Container();
        $container->container_number = 'SZLU9553015';
        $container->loading_discharging = 'L';
        $container->yard_location = 'K30';
        $container->ts_local = 'EXP';
        $container->temperature_unit = 'C';
        $container->set_temp = '20';
        $container->plug_on_date = '2019-09-01';
        $container->plug_on_time = '14:34:00';
        $container->plug_on_temp = '22';
        $container->plugging_category = 	'monitoring';
        $container->save();

        $query_string = 'schedule_4=&schedule_8=&schedule_12=&schedule_16=22.00&schedule_20=&schedule_24=&_method=PUT&row_monitoring_date=2019-09-01&date=2019-09-01&loading_discharging=B&vessel_id=&yard_location=&voyage_id=&container_number=&redirect_target=%2Fread%2Freefer_monitoring_excel%2F&plug_cat=monitoring&toggle_container_number=on&toggle_plug_on_date=on&toggle_plug_on_time=on&toggle_temperature_unit=on&toggl_plug_off=on&toggle_delete=on&status=11';
        parse_str($query_string, $query_array);
        $response = $this->put('/monitoring_row_create/'.$container->id,$query_array);
        $response->assertOk();
        $this->expectOutputString('');
        $message = json_decode($response->content())->message;
        //var_dump($message/*,$query_array*/);die();
        $this->assertStringContainsString('Monitoring Successfully Created',$message->success[0]);
        $this->assertStringContainsString('Loading/Discharging Vessel Voyages are missing',$message->error[0]);
    }


}
